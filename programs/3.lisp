(
    (let x True)
    (if (x)
        (print Success-1)
        (print Failure-2)
    )
    (if (not False)
        (print Success-2)
        (print Failure-2)
    )
    (if (or False False (not False))
        (print Success-3)
        (print Failure-3)
    )
    (if (and True True (not True))
        (print Failure-4)
        (print Success-4)
    )
)